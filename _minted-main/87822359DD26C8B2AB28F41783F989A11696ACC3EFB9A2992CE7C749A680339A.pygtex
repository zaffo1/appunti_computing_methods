\begin{Verbatim}[commandchars=\\\{\}]
\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{} range() is a function that returns a generator in Python 3. The list of }
\PYG{l+s+sd}{numbers never exists entirely, they are created ine at a time.}
\PYG{l+s+sd}{Note: In Python 2 range() does create the full list at the beginning. }
\PYG{l+s+sd}{There used to be a xrange() function for lazy generation, which is now }
\PYG{l+s+sd}{deprecated in Python 3. \PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{4}\PYG{p}{):}  \PYG{c+c1}{\PYGZsh{} generators act like iterators in for loop}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{n}{i}\PYG{p}{)}

\PYG{n}{data} \PYG{o}{=} \PYG{p}{[}\PYG{l+m+mi}{12}\PYG{p}{,} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{l+m+mi}{5}\PYG{p}{]}
\PYG{n}{square\PYGZus{}data\PYGZus{}generator} \PYG{o}{=} \PYG{p}{(}\PYG{n}{x}\PYG{o}{**}\PYG{l+m+mi}{2} \PYG{k}{for} \PYG{n}{x} \PYG{o+ow}{in} \PYG{n}{data}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} generator expression!}
\PYG{k}{for} \PYG{n}{square\PYGZus{}datum} \PYG{o+ow}{in} \PYG{n}{square\PYGZus{}data\PYGZus{}generator}\PYG{p}{:} \PYG{c+c1}{\PYGZsh{} again, works like an iterator}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{n}{square\PYGZus{}datum}\PYG{p}{)}
\end{Verbatim}
